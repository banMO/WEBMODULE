React use the spread operator {...} hace que este disponible toos los atributos que contiene un card


// Write JavaScript here and press Ctrl+Enter to execute
const Card = (props) => {
	return (
  	<div style={{marginLeft: '1em'}}>
    	<img width="75" src="http://placehold.it/75"/>
  	  <div style={{display: 'inline-block', marginLeft: 10}}>
  	    <div style={{fontSize: '1.24em', fontWeight: 'bold'}}>{props.name}</div>
        <div>Company Name here ..</div>
  	  </div>
  	</div>
  );
};

let data = [
	{
  	name: "Paul",
  	company: "facebook"
  },
  {
  	name: "Ilsen",
  	company: "facebook"
  },
  {
  	name: "Raul",
  	company: "google"
  }
  
]
const CardList = (props) => {
	return (
  	<div>
			{props.cards.map(card => <Card {...card}/>)}
  	</div>
  );
};

class Form extends React.Component {
	state = {
  	userName: ''
  }
	handleSubmit = () => {
  	event.preventDefault();
    console.log('Event: form submit',  this.userNameInput.value);
  };
	render() {
  	return (
    	<form onSubmit={this.handleSubmit}>
    	  	<input type="text" 
          laceholder="Github username"/>
          p<button type="submit">Add card</button>
    	</form>
    );
  }
}

class App extends React.Component {
	state = {
  	cards: [
        {
          name: "Paul",
          company: "facebook"
        },
        {
          name: "Ilsen",
          company: "facebook"
        },
        {
          name: "Raul",
          company: "google"
        }
		]
  }
	render() {
  	return (
    	<div>
    	  <Form/>
        <CardList cards={this.state.cards}/>
    	</div>
    )
  }
}

ReactDOM.render(<App/>, mountNode);
// ref={(input) => this.userNameInput = input}



--------------------------------------------------
// Write JavaScript here and press Ctrl+Enter to execute
const Card = (props) => {
	return (
  	<div style={{marginLeft: '1em'}}>
    	<img width="75" src="http://placehold.it/75"/>
  	  <div style={{display: 'inline-block', marginLeft: 10}}>
  	    <div style={{fontSize: '1.24em', fontWeight: 'bold'}}>{props.name}</div>
        <div>Company Name here ..</div>
  	  </div>
  	</div>
  );
};

// let data = [
// 	{
//   	name: "Paul",
//   	company: "facebook"
//   },
//   {
//   	name: "Ilsen",
//   	company: "facebook"
//   },
//   {
//   	name: "Raul",
//   	company: "google"
//   }
  
// ]
const CardList = (props) => {
	return (
  	<div>
			{props.cards.map(card => <Card {...card}/>)}
  	</div>
  );
};

class Form extends React.Component {
	state = {
  	userName: ''
  }
	handleSubmit = () => {
  	event.preventDefault();
    console.log('Event: form submit',  this.state.userName);
  };
	render() {
  	return (
    	<form onSubmit={this.handleSubmit}>
    	  	<input type="text" 
          value={this.state.userName}
          onChange={(event) => {this.setState({userName: event.target.value})}}
          placeholder="Github username"/>
          <button type="submit">Add card</button>
    	</form>
    );
  }
}

class App extends React.Component {
	state = {
  	cards: [
        {
          name: "Paul",
          company: "facebook"
        },
        {
          name: "Ilsen",
          company: "facebook"
        },
        {
          name: "Raul",
          company: "google"
        }
		]
  };
    addNewCard = (cardInfo) => {
  	this.setState(prevState => ({
    cards: prevState.cards.concat(cardInfo)
    }));
  };
	render() {
  	return (
    	<div>
    	  <Form onSubmit={this.addNewCard}/>
        <CardList cards={this.state.cards}/>
    	</div>
    )
  }
}

ReactDOM.render(<App/>, mountNode);